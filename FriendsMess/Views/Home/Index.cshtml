@using System.Globalization
@using FriendsMess.Controllers
@using Microsoft.AspNet.Identity
@model FriendsMess.ViewModels.HomeViewModel
@{
    ViewBag.Title = "Home";
    var home = new HomeController();
    var mealRate = home.GetMealRate(User.Identity.GetUserName());
}
<span>
    @Html.ActionLink("Download pdf", "ExportPdf", "Home", null, new { @class = "btn btn-success", style = "float:left; margin-top: 10px" })
    <button class="btn btn-danger js-clearMonth" style="float: right; margin-top: 10px;">Start New Month</button>
</span>
<h2 style="text-align: center; color:white">Meal Rate:@mealRate.ToString("C2", CultureInfo.CreateSpecificCulture("en-BD"))</h2>
@if (Model.Members.Count > 0)
{
    <div>
        <table id="HomeTbl" class="table table-hover table-bordered">
            <thead>
                <tr class="text-info">
                    <th>Name</th>
                    <th>Deposit</th>
                    <th>Total Meal</th>
                    <th>Meal Cost</th>
                    <th>Ohter Expenses</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var member in Model.Members)
                {

                    var totalMeal = home.GetTotalMeal(member.Id);
                    var mealExpense = home.GetMealRate(User.Identity.GetUserName()) * totalMeal;
                    var otherExpense = home.GetOtherExpense(User.Identity.GetUserName());
                    float balance;
                    int currentDeposit;
                    try
                    {
                        balance = member.Deposits.SingleOrDefault(mon => mon.MonthNo == 3).Amount - (mealExpense + otherExpense);
                        currentDeposit = member.Deposits.SingleOrDefault(depo => depo.MonthNo == 3).Amount;
                    }
                    catch (Exception e)
                    {
                        balance = 0;
                        currentDeposit = 0;
                    }

                    <tr>
                        <td><span><img src="~/Images/robin.jpg" style="border-radius:50%; padding: 10px;" width="50px;" height="50px;" /></span>@member.Name</td>
                        <td>@currentDeposit.ToString("C0", CultureInfo.CreateSpecificCulture("en-BD"))</td>
                        <td>@totalMeal</td>
                        <td>@mealExpense.ToString("C2", CultureInfo.CreateSpecificCulture("en-BD"))</td>
                        <td>@otherExpense.ToString("C2", CultureInfo.CreateSpecificCulture("en-BD"))</td>
                        @{
                            if (balance < 0)
                            {
                                balance = balance * -1;
                                <td style="color:#ee82ee">Due:@balance.ToString("C2", CultureInfo.CreateSpecificCulture("en-BD"))</td>
                            }
                            else
                            {
                                <td>@balance.ToString("C2", CultureInfo.CreateSpecificCulture("en-BD"))</td>

                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
        <br />
        @*<h2 style="text-align: center; color:white">Detailed Meals</h2>
        <table class="table table-bordered table-hover">
            <thead>
                <tr class="danger">
                    <th>Date</th>
                    @foreach (var mem in Model.Members)
                    {
                        <th>@mem.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    int j = 0;
                    int m = 0;
                    var totalDay = Model.Days.Count;
                    var totalMember = Model.Members.Count;
                    for (int i = 0; i < totalDay; i++)
                    {
                        <tr style="background-color:gainsboro">
                            <td>@Model.Days[j++].DayNumber.ToShortDateString()</td>
                            @for (int k = 0; k < totalMember; k++)
                            {
                                <td>@Model.Meals[m++].MealNo</td>
                            }
                        </tr>

                    }
                }
            </tbody>
        </table>*@
    </div>

}
else
{
    <div class="jumbotron" style="margin-top: 7%;background: brown">
        <ul>
            <li>Add some members with deposit in Members menu</li>
            <li>Update their meals with total expense in Update Menu</li>
            <li>Add extra expenses in Ohters Menu</li>
            <li>Come back Home and see all dynamic calculations</li>
        </ul>
    </div>
}
@section scripts{
    <script>
        $(document).ready(function () {
            $(".js-clearMonth").on("click",
                function () {
                    var button = $(this);
                    bootbox.confirm("This will erase all meals and this has other consequences too. Are you sure you want to clear current month?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: '@Url.Action("NewMonth","Home")',
                                    success: function () {
                                        window.location.href = '@Url.Action("Index","Home")';
                                    }
                                });
                            }
                        });
                });
            $("#HomeTbl").DataTable({
                paging:false
            });
        });
    </script>
}
