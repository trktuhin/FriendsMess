@model FriendsMess.ViewModels.MealViewModel
@{
    ViewBag.Title = "Update meals";
}
<div>
    <div style="float: right">
        @Html.ValidationSummary(true, "Please fix these errors", new { @class = "error" })
    </div>
    @*<h2 style="text-align: center;margin-top: 10px;">Update meals</h2>*@
    @if (Model.Members.Count > 0)
    {
        using (Html.BeginForm("Save", "Update"))
        {

            <div style="float: left; width: 50%; margin-left: 6%; padding-bottom: 20px; margin-right: 2%; margin-top: 10px;">
                @{
                    var i = 0;
                }
                <table id="update" class="table">
                    <thead>
                    <tr>
                        <th >Members</th>
                        <th >Meals</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var member in Model.Members)
                    {
                        <tr>
                            <td style="color:cornsilk">
                                <span><img src="~/Images/@member.ImagePath" onerror="this.onerror = null; this.src = '/Images/meal.jpg';" style=" border-radius:50%;border:1.8px solid #00fa9a" width="50px;" height="50px;" /></span>    @member.Name
                            </td>
                            <td>
                                @{
                                    @Html.DropDownListFor(m => m.Meals[i].MealNo, new SelectList(new List<int>() {2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10}), new {@class = "form-control"})
                                    Model.Meals[i].MemberId = member.Id;
                                }
                            </td>
                            
                            @Html.HiddenFor(m => m.Meals[i].MemberId, new {value = member.Id})
                            @{
                                i++;
                            }
                            
                        </tr>

                    }
                    </tbody>
                    
                </table>
            </div>
        
            <div style="float: right; margin-right: 20%; width: 20%; padding-bottom: 10px;margin-top: 20px">
                <div class="form-group">
                    @Html.LabelFor(m => m.Day)
                    @Html.EditorFor(m => m.Day, new { htmlAttributes = new { @class = "form-control", placeholder = "Select date", @readonly = "true" ,style="background:transparent;color:white" } })
                    @Html.ValidationMessageFor(m => m.Day)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Expense)
                    @Html.TextBoxFor(m => m.Expense, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Expense)
                </div>
                <div>
                    <label><b>Responsible Member</b></label>
                    @Html.DropDownListFor(m => m.ResponsibleMem, new SelectList(Model.Members, "Name", "Name"), "Select Responsible Mebmer", new { @class = "form-control" })
                </div>
                <button type="submit" class="btn btn-primary" style="margin-top: 10px; position: fixed;">Save</button>

            </div>
            <div class="clearfix"></div>
        }
    }
    else
    {
        <div style="margin-top: 7%;background: brown" class=" jumbotron">
            <h3>Add members first !</h3>
        </div>
    }
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryui")  
    @Styles.Render("~/Content/cssjqryUi")  

    <script type="text/javascript">
        $(document).ready(function() {
            $("#update").DataTable({
                ordering: false,
                paging:false
            });

            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });


    </script>
}
